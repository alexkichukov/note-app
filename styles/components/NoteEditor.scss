$space-between: 20px;
$controls-height: 75px;

.editor-container {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.editor-controls {
  // Flex
  display: flex;
  align-items: center;
  padding: 0 20px; // Push the icons a little from both sides
  margin-bottom: $space-between; // Space between controls and actual editor
  // General styles
  background: white;
  height: $controls-height;
  border-radius: $radius;
  box-shadow: $card-shadow;
}

.editor {
  // Padding is 15vh on both sides so 70vh of height left minus the height that
  // the editor controls take up.
  // Have no idea where those 7 pixels came from but it is perfect this way.
  min-height: calc(70vh - #{$space-between + $controls-height - 7px});

  outline: none;
  user-select: none;
  border-radius: $radius;
  width: 100%;
  padding: 45px;
  padding-right: 50px;
  background: white;
  box-shadow: $card-shadow;
  // Font
  color: $text-normal;
  font-size: 1.1rem;

  /// How to style specific elements found in the editor

  // General ul, ol
  ul, ol {
    padding: 0 0 0 20px;
    li {
      margin: 5px 0;
    }
  }

  // A checklist
  .checklist {
    padding: 0;
    list-style: none;

    // <li> element
    .checklist-item {
      position: relative;
      padding-left: 30px; // Space away from the check
      pointer-events: none; // ::before can be clicked, li cannot

      // The ::before acting as a check
      &::before {
        pointer-events: all; // ::before can be clicked, li cannot
        content: '';
        cursor: pointer;
        position: absolute;
        top: 0;
        left: 0;
        width: 20px;
        height: 20px;
        margin-right: 10px;
        background: #cccccc;
      }
      
      &:active::before {
        transform: scale(0.9);
      }

      // When it is checked
      &.checked {
        text-decoration: line-through;
        color: $text-light;

        // The check
        &::before {
          background: $primary;
        }
      }
    }
  }
}